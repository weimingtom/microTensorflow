# This is a basic workflow to help you get started with Actions

name: generate_project_files

# Controls when the action will run. 
on: push
    #schedule:
    #    - cron: "0 0 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  clone_tensorflow:
    runs-on: ubuntu-20.04
    steps:
    
      - name: Clone this repo
        uses: actions/checkout@master
        with:
            path: .
         
      - name: Clone Tensorflow
        uses: actions/checkout@v2
        with:
          repository: tensorflow/tensorflow
          path: ./tensorflow-master

      - name: Set Up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade six
          
      - name: generate projects
        run: cd tensorflow-master && make -f tensorflow/lite/micro/tools/make/Makefile generate_hello_world_make_project -j8 || true && make -f tensorflow/lite/micro/tools/make/Makefile generate_hello_world_make_project -j8

      - name: remove tf and third_party if they exist
        run: rm -rf tflite-micro

      - name: remove tf-lite-micro-cmsis
        run: rm -rf tflite-micro-cmsis

      - name: remove tf-lite-micro-ethosu
        run: rm -rf tflite-micro-ethosu

      - name: make tf-lite-micro folder
        run: mkdir tflite-micro

      - name: copy tf over
        run: cp -r tensorflow-master/tensorflow/lite/micro/tools/make/gen/linux_x86_64_default/prj/hello_world/make/tensorflow tflite-micro/ 

      - name: copy 3rd party over
        run: cp -r tensorflow-master/tensorflow/lite/micro/tools/make/gen/linux_x86_64_default/prj/hello_world/make/third_party tflite-micro/ 

      - name: copy readme and license
        run: cp tensorflow-master/tensorflow/lite/micro/tools/make/gen/linux_x86_64_default/prj/hello_world/make/README_MAKE.md tflite-micro/readme.md && cp tensorflow-master/tensorflow/lite/micro/tools/make/gen/linux_x86_64_default/prj/hello_world/make/LICENSE tflite-micro/LICENSE
    
      - name: removing hello_world_example
        run: rm -rf tflite-micro/tensorflow/lite/micro/examples
        
      - name: clean tf generated
        run: cd tensorflow-master && make -f tensorflow/lite/micro/tools/make/Makefile clean && make -f tensorflow/lite/micro/tools/make/Makefile clean_downloads
    
      - name: generate cmsis projects
        run: cd tensorflow-master && make -f tensorflow/lite/micro/tools/make/Makefile OPTIMIZED_KERNEL_DIR=cmsis_nn generate_hello_world_make_project -j8 || true && make -f tensorflow/lite/micro/tools/make/Makefile OPTIMIZED_KERNEL_DIR=cmsis_nn generate_hello_world_make_project -j8
    
      - name: make cmsis folder
        run: mkdir tflite-micro-cmsis

      - name: copy tf cmsis over
        run: cp -r tensorflow-master/tensorflow/lite/micro/tools/make/gen/linux_x86_64_default/prj/hello_world/make/tensorflow tflite-micro-cmsis/ 

      - name: copy 3rd party over
        run: cp -r tensorflow-master/tensorflow/lite/micro/tools/make/gen/linux_x86_64_default/prj/hello_world/make/third_party tflite-micro-cmsis/ 

      - name: copy readme and license2
        run: cp tensorflow-master/tensorflow/lite/micro/tools/make/gen/linux_x86_64_default/prj/hello_world/make/README_MAKE.md tflite-micro-cmsis/readme.md && cp tensorflow-master/tensorflow/lite/micro/tools/make/gen/linux_x86_64_default/prj/hello_world/make/LICENSE tflite-micro-cmsis/LICENSE

      - name: clean cmsis folder
        run: |
            mkdir -p tflite-micro-cmsis/third_party/cmsis
            cp tensorflow-master/tensorflow/lite/micro/tools/make/downloads/cmsis/LICENSE.txt tflite-micro-cmsis/third_party/cmsis/
            cp tensorflow-master/tensorflow/lite/micro/tools/make/downloads/cmsis/README.md tflite-micro-cmsis/third_party/cmsis/
            mkdir -p tflite-micro-cmsis/third_party/cmsis/CMSIS/Core
            cp -r tensorflow-master/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/Core/Include tflite-micro-cmsis/third_party/cmsis/CMSIS/Core/
            mkdir -p tflite-micro-cmsis/third_party/cmsis/CMSIS/DSP
            cp -r tensorflow-master/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/DSP/Include/ tflite-micro-cmsis/third_party/cmsis/CMSIS/DSP/
            mkdir -p tflite-micro-cmsis/third_party/cmsis/CMSIS/NN/
            cp -r tensorflow-master/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/NN/Include/ tflite-micro-cmsis/third_party/cmsis/CMSIS/NN/
            cp -r tensorflow-master/tensorflow/lite/micro/tools/make/downloads/cmsis/CMSIS/NN/Source/ tflite-micro-cmsis/third_party/cmsis/CMSIS/NN/
            rm -rf tflite-micro-cmsis/tensorflow/lite/micro/tools
            rm -rf tflite-micro-cmsis/tensorflow/lite/micro/examples
            cd tflite-micro-cmsis
            find . -name "CMakeLists.txt" -delete
            
      - name: clean tf generated2
        run: cd tensorflow-master && make -f tensorflow/lite/micro/tools/make/Makefile clean && make -f tensorflow/lite/micro/tools/make/Makefile clean_downloads

      - name: generate ethosu projects
        run: cd tensorflow-master && make -f tensorflow/lite/micro/tools/make/Makefile TARGET=cortex_m_generic TARGET_ARCH=cortex-m55  OPTIMIZED_KERNEL_DIR=cmsis_nn CO_PROCESSOR=ethos_u generate_hello_world_make_project -j8 || true && make -f tensorflow/lite/micro/tools/make/Makefile TARGET=cortex_m_generic TARGET_ARCH=cortex-m55  OPTIMIZED_KERNEL_DIR=cmsis_nn CO_PROCESSOR=ethos_u generate_hello_world_make_project -j8 

      - name: copy tf ethosu over
        run: cp -r tensorflow-master/tensorflow/lite/micro/tools/make/gen/cortex_m_generic_cortex-m55_default/prj/hello_world/make/tensorflow/ tflite-micro-ethosu/tensorflow

      - name: copy third_party ethosu over
        run: cp -r tensorflow-master/tensorflow/lite/micro/tools/make/gen/cortex_m_generic_cortex-m55_default/prj/hello_world/make/third_party/ tflite-micro-ethosu/third_party

      - name: copy ethosu into third_party
        run: cp -r tensorflow-master/tensorflow/lite/micro/tools/make/downloads/ethosu tflite-micro-ethosu/third_party/ethosu && rm -rf tflite-micro-ethosu/third_party/CMakeLists.txt

      - name: copy readme and license2
        run: cp tensorflow-master/tensorflow/lite/micro/tools/make/gen/cortex_m_generic_cortex-m55_default/prj/hello_world/make/README_MAKE.md tflite-micro-cmsis/readme.md && cp tensorflow-master/tensorflow/lite/micro/tools/make/gen/cortex_m_generic_cortex-m55_default/prj/hello_world/make/LICENSE tflite-micro-cmsis/LICENSE

      - name: remove tools folder2
        run: rm -rf tflite-micro-ethosu/tensorflow/lite/micro/tools

      - name: remove examples number2
        run: rm -rf tflite-micro-ethosu/tensorflow/lite/micro/examples

      - name: copy over cmsis from cmsis to ethosu
        run: cp -r tflite-micro-cmsis/third_party/cmsis tflite-micro-ethosu/third_party/
            
      - name: remove tensorflow
        run: rm -rf tensorflow-master

      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Update tflite-micro"
 
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

